<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    namespace:名称空间
-->

<mapper namespace="com.dreamtank.mapper.BrandMapper">


<!--    sql片段-->
<!--    <sql id="brand_column">id, brand_name brandName, company_name companyName, ordered , description, status</sql>-->


<!--    <select id="selectAll" resultType="brand">-->
<!--        select-->
<!--            <include refid="brand_column"></include>-->
<!--        from tb_brand ;-->

<!--    </select>-->


    <resultMap id="brandResultMap" type="brand">
        <result property="brandName" column="brand_name" />
        <result column="company_name" property="companyName"/>
    </resultMap>
    <insert id="addOrder" useGeneratedKeys="true" keyProperty="id">
        insert into tb_brand (brand_name, company_name, ordered, description, status)
        values (#{brandName},#{companyName},#{ordered},#{description},#{status})

    </insert>
    <update id="update">
        update tb_brand
        <set>
            <if test="brandName != null and brandName != ''">
                brand_name = #{brandName},
            </if>
        <if test="companyName != null and companyName != ''">
                company_name = #{companyName},
        </if>
        <if test="ordered != null">
            ordered = #{ordered},
        </if>
        <if test="description!= null and description!= ''">
            description = #{description},
        </if>
        <if test="status != null">
            status =#{status}
        </if>
        where id = #{id}
    </set>
    </update>
    <delete id="deleteByIdAfter">
        delete from tb_brand
        where id = #{id}
    </delete>

    <delete id="deleteByIds">
        delete from tb_brand
        where id in ( <foreach collection="ids" item="id" separator=",">
              #{id}
         </foreach>

            )
    </delete>


    <select id="selectAll" resultMap="brandResultMap">
        select
        *
        from tb_brand ;

    </select>
    <select id="selectByIdBrand" resultMap="brandResultMap">

      select * from tb_brand where id &lt; #{id};

    </select>
<!--    <select id="selectByCondition" resultMap="brandResultMap">-->
<!--    select * from tb_brand-->
<!--    where status = #{status}-->
<!--    and company_name like #{companyName}-->
<!--    and brand_name like #{brandName}-->

<!--    </select>-->


    <select id="selectByCondition" resultMap="brandResultMap">
          select * from tb_brand
--           where 1= 1
            <where>
              <if test="status != null" >
                 and status = #{status}
              </if>

              <if test="companyName != null and companyName != ''" >
                  and company_name like #{companyName}
              </if>

            <if test="brandName != null and brandName != ''"  >
                and brand_name like #{brandName}
            </if>
            </where>


    </select>
<!--    <select id="selectByConditionSingle" resultMap="brandResultMap">-->
<!--        select  *-->
<!--        from tb_brand-->
<!--        where-->
<!--            <choose>-->
<!--                <when test="status != null">-->
<!--                   status = #{status}-->
<!--                </when>-->
<!--                <when test="companyName != null and companyName != ''">-->
<!--                    company_name like #{companyName}-->
<!--                </when>-->
<!--                <when test="brandName != null and brandName != ''">-->
<!--                    brand_name like #{brandName}-->
<!--                </when>-->
<!--                <otherwise>-->
<!--                    1=1-->
<!--                </otherwise>-->


<!--            </choose>-->

<!--    </select>-->

    <select id="selectByConditionSingle" resultMap="brandResultMap">
        select  *
        from tb_brand
       <where>
        <choose>
            <when test="status != null">
                status = #{status}
            </when>
            <when test="companyName != null and companyName != ''">
                company_name like #{companyName}
            </when>
            <when test="brandName != null and brandName != ''">
                brand_name like #{brandName}
            </when>


        </choose>
    </where>

    </select>
</mapper>